/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.usp.icmc.vicg.gl.util;

import br.usp.icmc.vicg.gl.app.App;
import br.usp.icmc.vicg.gl.app.Pipeline;
import br.usp.icmc.vicg.gl.model.jwavefront.JWavefrontModel;
import br.usp.icmc.vicg.gl.model.Trees;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author ch
 */
public class GameManager extends javax.swing.JFrame implements ChangeListener {
    private Pipeline pipeline;
    private ArrayList<Manageable> objectList;
    private boolean DEBUG = false;
    private int ATT_FACTOR = 10;
    private int WIND_ATT = 100;
    /**
     * Creates new form GameManager
     */
    public GameManager(){
        initComponents();
        this.pipeline = Pipeline.getInstance();
        System.out.println("Iniciou GameManager");
        this.setTitle("Game Manager 0.01v");
        this.sKa.addChangeListener(this);
        this.sKs.addChangeListener(this);
        this.sKd.addChangeListener(this);
        this.sNs.addChangeListener(this);
        
        this.sTx.addChangeListener(this);
        this.sTy.addChangeListener(this);
        this.sTz.addChangeListener(this);
        this.sSx.addChangeListener(this);
        this.sSy.addChangeListener(this);
        this.sSz.addChangeListener(this);
        this.sRx.addChangeListener(this);
        this.sRy.addChangeListener(this);
        this.sRz.addChangeListener(this);
        this.sObjRotTheta.addChangeListener(this);
        this.objectList = new ArrayList<>();        
        this.comboBoxModel.setEnabled(false);
        this.comboBoxEntity.setEnabled(false);
        updateWindVectorLabelsAndSlidersFromWorld();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel3 = new javax.swing.JPanel();
    jLabel23 = new javax.swing.JLabel();
    jLabel24 = new javax.swing.JLabel();
    lcamAngle = new javax.swing.JLabel();
    jLabel22 = new javax.swing.JLabel();
    tfSpeedCamera = new javax.swing.JTextField();
    bSpeedCamera = new javax.swing.JButton();
    jLabel42 = new javax.swing.JLabel();
    tfRotationSpeed = new javax.swing.JTextField();
    bRotationSpeed = new javax.swing.JButton();
    jLabel44 = new javax.swing.JLabel();
    labelPlayerX = new javax.swing.JLabel();
    labelPlayerY = new javax.swing.JLabel();
    labelPlayerZ = new javax.swing.JLabel();
    jTabbedPane4 = new javax.swing.JTabbedPane();
    jPanel4 = new javax.swing.JPanel();
    jLabel25 = new javax.swing.JLabel();
    comboBoxCategory = new javax.swing.JComboBox();
    jPanel6 = new javax.swing.JPanel();
    jPanel7 = new javax.swing.JPanel();
    jLabel32 = new javax.swing.JLabel();
    sTx = new javax.swing.JSlider();
    jLabel34 = new javax.swing.JLabel();
    lTx = new javax.swing.JLabel();
    jLabel36 = new javax.swing.JLabel();
    sTy = new javax.swing.JSlider();
    jLabel38 = new javax.swing.JLabel();
    jLabel39 = new javax.swing.JLabel();
    lTy = new javax.swing.JLabel();
    sTz = new javax.swing.JSlider();
    lTz = new javax.swing.JLabel();
    jLabel40 = new javax.swing.JLabel();
    jPanel9 = new javax.swing.JPanel();
    jLabel47 = new javax.swing.JLabel();
    sSx = new javax.swing.JSlider();
    jLabel48 = new javax.swing.JLabel();
    lSx = new javax.swing.JLabel();
    jLabel49 = new javax.swing.JLabel();
    sSy = new javax.swing.JSlider();
    jLabel50 = new javax.swing.JLabel();
    jLabel51 = new javax.swing.JLabel();
    lSy = new javax.swing.JLabel();
    sSz = new javax.swing.JSlider();
    lSz = new javax.swing.JLabel();
    jLabel52 = new javax.swing.JLabel();
    jLabel41 = new javax.swing.JLabel();
    tfFactor = new javax.swing.JTextField();
    jPanel10 = new javax.swing.JPanel();
    jLabel53 = new javax.swing.JLabel();
    sRx = new javax.swing.JSlider();
    jLabel54 = new javax.swing.JLabel();
    lRx = new javax.swing.JLabel();
    jLabel55 = new javax.swing.JLabel();
    sRy = new javax.swing.JSlider();
    jLabel56 = new javax.swing.JLabel();
    jLabel57 = new javax.swing.JLabel();
    lRy = new javax.swing.JLabel();
    sRz = new javax.swing.JSlider();
    lRz = new javax.swing.JLabel();
    jLabel58 = new javax.swing.JLabel();
    sObjRotTheta = new javax.swing.JSlider();
    jLabel59 = new javax.swing.JLabel();
    lObjRotAngle = new javax.swing.JLabel();
    jLabel60 = new javax.swing.JLabel();
    comboBoxModel = new javax.swing.JComboBox();
    jLabel61 = new javax.swing.JLabel();
    comboBoxEntity = new javax.swing.JComboBox();
    jLabel62 = new javax.swing.JLabel();
    bDrawBoundBox = new javax.swing.JButton();
    jLabel43 = new javax.swing.JLabel();
    labelTx = new javax.swing.JLabel();
    labelTy = new javax.swing.JLabel();
    labelTz = new javax.swing.JLabel();
    jPanel5 = new javax.swing.JPanel();
    jPanel2 = new javax.swing.JPanel();
    bLight0Position = new javax.swing.JButton();
    tfPosA0 = new javax.swing.JTextField();
    jLabel18 = new javax.swing.JLabel();
    jLabel11 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    tfPosZ0 = new javax.swing.JTextField();
    tfPosY0 = new javax.swing.JTextField();
    tfPosX0 = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jPanel8 = new javax.swing.JPanel();
    jLabel7 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    tfAmbColorRed0 = new javax.swing.JTextField();
    tfAmbColorGreen0 = new javax.swing.JTextField();
    tfAmbColorBlue0 = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    sAmbColor = new javax.swing.JSlider();
    jLabel19 = new javax.swing.JLabel();
    tfAmbColorAlpha0 = new javax.swing.JTextField();
    bLight0AmbColor = new javax.swing.JButton();
    lIa = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jPanel11 = new javax.swing.JPanel();
    jLabel12 = new javax.swing.JLabel();
    bLight0DiffuseColor = new javax.swing.JButton();
    jLabel14 = new javax.swing.JLabel();
    jLabel13 = new javax.swing.JLabel();
    tfDifuseColorGreen0 = new javax.swing.JTextField();
    tfDifuseColorBlue0 = new javax.swing.JTextField();
    tfDifuseColorRed0 = new javax.swing.JTextField();
    tfDiffColorAlpha0 = new javax.swing.JTextField();
    jLabel20 = new javax.swing.JLabel();
    sDiffuseColor = new javax.swing.JSlider();
    jLabel4 = new javax.swing.JLabel();
    lId = new javax.swing.JLabel();
    jPanel12 = new javax.swing.JPanel();
    jLabel21 = new javax.swing.JLabel();
    tfSpecularAlpha0 = new javax.swing.JTextField();
    tfSpecularColorRed0 = new javax.swing.JTextField();
    jLabel17 = new javax.swing.JLabel();
    jLabel16 = new javax.swing.JLabel();
    jLabel15 = new javax.swing.JLabel();
    bLight0SpecularColor = new javax.swing.JButton();
    tfSpecularColorBlue0 = new javax.swing.JTextField();
    tfSpecularColorGreen0 = new javax.swing.JTextField();
    sSpecularColor = new javax.swing.JSlider();
    jLabel3 = new javax.swing.JLabel();
    lIs = new javax.swing.JLabel();
    jPanel13 = new javax.swing.JPanel();
    jPanel1 = new javax.swing.JPanel();
    jLabel26 = new javax.swing.JLabel();
    jLabel27 = new javax.swing.JLabel();
    jLabel29 = new javax.swing.JLabel();
    sKa = new javax.swing.JSlider();
    sKd = new javax.swing.JSlider();
    sKs = new javax.swing.JSlider();
    jLabel28 = new javax.swing.JLabel();
    sNs = new javax.swing.JSlider();
    jLabel30 = new javax.swing.JLabel();
    jLabel31 = new javax.swing.JLabel();
    lKa = new javax.swing.JLabel();
    jLabel33 = new javax.swing.JLabel();
    lKd = new javax.swing.JLabel();
    jLabel35 = new javax.swing.JLabel();
    lKs = new javax.swing.JLabel();
    jLabel37 = new javax.swing.JLabel();
    lNs = new javax.swing.JLabel();
    jPanel14 = new javax.swing.JPanel();
    jPanel15 = new javax.swing.JPanel();
    sWindVectorY = new javax.swing.JSlider();
    sWindVectorX = new javax.swing.JSlider();
    sWindVectorZ = new javax.swing.JSlider();
    jLabel46 = new javax.swing.JLabel();
    jLabel63 = new javax.swing.JLabel();
    jLabel64 = new javax.swing.JLabel();
    lWindVecX = new javax.swing.JLabel();
    lWindVecY = new javax.swing.JLabel();
    lWindVecZ = new javax.swing.JLabel();
    jLabel65 = new javax.swing.JLabel();
    lWindAtt = new javax.swing.JLabel();
    sWindAtt = new javax.swing.JSlider();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setBackground(new java.awt.Color(255, 255, 255));
    setResizable(false);

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Camera Control"));

    jLabel23.setText("Speed:");

    jLabel24.setText("CamAngle:");

    tfSpeedCamera.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfSpeedCameraActionPerformed(evt);
      }
    });

    bSpeedCamera.setText("Apply");
    bSpeedCamera.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bSpeedCameraActionPerformed(evt);
      }
    });

    jLabel42.setText("Rotation Speed:");

    tfRotationSpeed.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfRotationSpeedActionPerformed(evt);
      }
    });

    bRotationSpeed.setText("Apply");
    bRotationSpeed.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bRotationSpeedActionPerformed(evt);
      }
    });

    jLabel44.setText("Player Position: ");

    labelPlayerX.setText("        ");

    labelPlayerY.setText("        ");

    labelPlayerZ.setText("        ");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel22)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel23)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfSpeedCamera, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bSpeedCamera))
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel24)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lcamAngle, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(64, 64, 64)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel42)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfRotationSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel44)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelPlayerX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(bRotationSpeed)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(labelPlayerY, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(labelPlayerZ, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel42)
                .addComponent(tfRotationSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bRotationSpeed))
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel23)
                .addComponent(tfSpeedCamera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(bSpeedCamera)))
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel24)
                .addComponent(lcamAngle, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel44)
                .addComponent(labelPlayerX)
                .addComponent(labelPlayerY)
                .addComponent(labelPlayerZ))))
          .addComponent(jLabel22))
        .addContainerGap(16, Short.MAX_VALUE))
    );

    jLabel25.setText("Category");

    comboBoxCategory.setMaximumRowCount(4);
    comboBoxCategory.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseEntered(java.awt.event.MouseEvent evt) {
        comboBoxCategoryMouseEntered(evt);
      }
    });
    comboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        comboBoxCategoryActionPerformed(evt);
      }
    });

    jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Object Position"));

    jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Translate"));

    jLabel32.setText("X:");

    sTx.setMajorTickSpacing(1);
    sTx.setMaximum(1000);
    sTx.setMinimum(-1000);
    sTx.setValue(0);
    sTx.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sTxMouseDragged(evt);
      }
    });

    jLabel34.setText("X:");

    lTx.setText(" ");

    jLabel36.setText("Y:");

    sTy.setMajorTickSpacing(1);
    sTy.setMaximum(1000);
    sTy.setMinimum(-1000);
    sTy.setValue(0);
    sTy.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sTyMouseDragged(evt);
      }
    });

    jLabel38.setText("Y:");

    jLabel39.setText("Z:");

    lTy.setText(" ");

    sTz.setMajorTickSpacing(1);
    sTz.setMaximum(1000);
    sTz.setMinimum(-1000);
    sTz.setValue(0);
    sTz.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sTzMouseDragged(evt);
      }
    });

    lTz.setText(" ");

    jLabel40.setText("Z:");

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
      jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel7Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addComponent(jLabel32)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sTx, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel34)
            .addGap(18, 18, 18)
            .addComponent(lTx, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addComponent(jLabel36)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sTy, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel38)
            .addGap(18, 18, 18)
            .addComponent(lTy, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel7Layout.createSequentialGroup()
            .addComponent(jLabel39)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sTz, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel40)
            .addGap(18, 18, 18)
            .addComponent(lTz, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(20, Short.MAX_VALUE))
    );
    jPanel7Layout.setVerticalGroup(
      jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel7Layout.createSequentialGroup()
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel34)
            .addComponent(lTx))
          .addComponent(sTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel32))
        .addGap(18, 18, 18)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel38)
            .addComponent(lTy))
          .addComponent(sTy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel36))
        .addGap(18, 18, 18)
        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel40)
            .addComponent(lTz))
          .addComponent(sTz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel39)))
    );

    jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Scale"));

    jLabel47.setText("X:");

    sSx.setMaximum(20);
    sSx.setValue(0);
    sSx.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sSxMouseDragged(evt);
      }
    });

    jLabel48.setText("X:");

    lSx.setText(" ");

    jLabel49.setText("Y:");

    sSy.setMaximum(20);
    sSy.setValue(0);
    sSy.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sSyMouseDragged(evt);
      }
    });

    jLabel50.setText("Y:");

    jLabel51.setText("Z:");

    lSy.setText(" ");

    sSz.setMaximum(20);
    sSz.setValue(0);
    sSz.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sSzMouseDragged(evt);
      }
    });

    lSz.setText(" ");

    jLabel52.setText("Z:");

    jLabel41.setText("Factor:");

    tfFactor.setText("1");

    javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
    jPanel9.setLayout(jPanel9Layout);
    jPanel9Layout.setHorizontalGroup(
      jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel9Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel9Layout.createSequentialGroup()
            .addComponent(jLabel41)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfFactor, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel9Layout.createSequentialGroup()
            .addComponent(jLabel47)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sSx, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel48)
            .addGap(18, 18, 18)
            .addComponent(lSx, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel9Layout.createSequentialGroup()
            .addComponent(jLabel49)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sSy, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel50)
            .addGap(18, 18, 18)
            .addComponent(lSy, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel9Layout.createSequentialGroup()
            .addComponent(jLabel51)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sSz, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel52)
            .addGap(18, 18, 18)
            .addComponent(lSz, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel9Layout.setVerticalGroup(
      jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel9Layout.createSequentialGroup()
        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel48)
            .addComponent(lSx))
          .addComponent(sSx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel47))
        .addGap(18, 18, 18)
        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel50)
            .addComponent(lSy))
          .addComponent(sSy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel49))
        .addGap(18, 18, 18)
        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel52)
            .addComponent(lSz))
          .addComponent(sSz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel51))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel41)
          .addComponent(tfFactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Rotate"));

    jLabel53.setText("X:");

    sRx.setMaximum(1);
    sRx.setMinimum(-1);
    sRx.setValue(0);
    sRx.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sRxMouseDragged(evt);
      }
    });

    jLabel54.setText("X:");

    lRx.setText(" ");

    jLabel55.setText("Y:");

    sRy.setMaximum(1);
    sRy.setMinimum(-1);
    sRy.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sRyMouseDragged(evt);
      }
    });

    jLabel56.setText("Y:");

    jLabel57.setText("Z:");

    lRy.setText(" ");

    sRz.setMaximum(1);
    sRz.setMinimum(-1);
    sRz.setValue(0);
    sRz.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sRzMouseDragged(evt);
      }
    });

    lRz.setText(" ");

    jLabel58.setText("Z:");

    sObjRotTheta.setMaximum(360);
    sObjRotTheta.setMinorTickSpacing(1);
    sObjRotTheta.setValue(0);
    sObjRotTheta.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sObjRotThetaMouseDragged(evt);
      }
    });

    jLabel59.setText("A:");

    lObjRotAngle.setText(" ");

    jLabel60.setText("Angle:");

    javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
    jPanel10.setLayout(jPanel10Layout);
    jPanel10Layout.setHorizontalGroup(
      jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel10Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel10Layout.createSequentialGroup()
            .addComponent(jLabel53)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sRx, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel54)
            .addGap(18, 18, 18)
            .addComponent(lRx, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel10Layout.createSequentialGroup()
            .addComponent(jLabel55)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sRy, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel56)
            .addGap(18, 18, 18)
            .addComponent(lRy, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel10Layout.createSequentialGroup()
            .addComponent(jLabel57)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sRz, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel58)
            .addGap(18, 18, 18)
            .addComponent(lRz, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel10Layout.createSequentialGroup()
            .addComponent(jLabel60)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sObjRotTheta, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel59)
            .addGap(18, 18, 18)
            .addComponent(lObjRotAngle, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(0, 0, Short.MAX_VALUE))
    );
    jPanel10Layout.setVerticalGroup(
      jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel10Layout.createSequentialGroup()
        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel54)
            .addComponent(lRx))
          .addComponent(sRx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel53))
        .addGap(18, 18, 18)
        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel56)
            .addComponent(lRy))
          .addComponent(sRy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel55))
        .addGap(18, 18, 18)
        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel58)
            .addComponent(lRz))
          .addComponent(sRz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel57))
        .addGap(18, 18, 18)
        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel59)
            .addComponent(lObjRotAngle))
          .addComponent(sObjRotTheta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel60))
        .addGap(0, 23, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
    jPanel6.setLayout(jPanel6Layout);
    jPanel6Layout.setHorizontalGroup(
      jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel6Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())))
    );
    jPanel6Layout.setVerticalGroup(
      jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel6Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    comboBoxModel.setMaximumRowCount(20);
    comboBoxModel.setPreferredSize(new java.awt.Dimension(36, 26));
    comboBoxModel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        comboBoxModelActionPerformed(evt);
      }
    });

    jLabel61.setText("Model");

    comboBoxEntity.setMaximumRowCount(20);
    comboBoxEntity.setPreferredSize(new java.awt.Dimension(36, 26));
    comboBoxEntity.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        comboBoxEntityActionPerformed(evt);
      }
    });

    jLabel62.setText("Entity:");

    bDrawBoundBox.setText("Draw Bound Box");
    bDrawBoundBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bDrawBoundBoxActionPerformed(evt);
      }
    });

    jLabel43.setText("T :  ");

    labelTx.setText("   ");

    labelTy.setText("   ");

    labelTz.setText("   ");

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel62)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(bDrawBoundBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(comboBoxEntity, 0, 135, Short.MAX_VALUE)))))
          .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addComponent(jLabel43)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelTx)
            .addGap(18, 18, 18)
            .addComponent(labelTy)
            .addGap(18, 18, 18)
            .addComponent(labelTz)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addGap(19, 19, 19)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel62)
            .addComponent(comboBoxEntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel61)
            .addComponent(comboBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel25)
            .addComponent(comboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addGap(3, 3, 3)
        .addComponent(bDrawBoundBox)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel43)
          .addComponent(labelTx)
          .addComponent(labelTy)
          .addComponent(labelTz))
        .addContainerGap())
    );

    jTabbedPane4.addTab("Object Manager", jPanel4);

    bLight0Position.setText("Apply");
    bLight0Position.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bLight0PositionActionPerformed(evt);
      }
    });

    tfPosA0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfPosA0ActionPerformed(evt);
      }
    });

    jLabel18.setText("?:");

    jLabel11.setText("Z:");

    jLabel10.setText("Y:");

    tfPosZ0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfPosZ0ActionPerformed(evt);
      }
    });

    tfPosY0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfPosY0ActionPerformed(evt);
      }
    });

    tfPosX0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfPosX0ActionPerformed(evt);
      }
    });

    jLabel9.setText("X:");

    jLabel1.setText("Light 0:");

    jLabel2.setText("Position:");

    jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Ambient Color"));

    jLabel7.setText("G:");

    jLabel8.setText("B:");

    tfAmbColorRed0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfAmbColorRed0ActionPerformed(evt);
      }
    });

    tfAmbColorGreen0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfAmbColorGreen0ActionPerformed(evt);
      }
    });

    tfAmbColorBlue0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfAmbColorBlue0ActionPerformed(evt);
      }
    });

    jLabel6.setText("R:");

    sAmbColor.setMaximum(1000);
    sAmbColor.setPaintLabels(true);
    sAmbColor.setPaintTicks(true);
    sAmbColor.setValue(0);
    sAmbColor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sAmbColorMouseDragged(evt);
      }
    });

    jLabel19.setText("A:");

    tfAmbColorAlpha0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfAmbColorAlpha0ActionPerformed(evt);
      }
    });

    bLight0AmbColor.setText("Apply");
    bLight0AmbColor.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bLight0AmbColorActionPerformed(evt);
      }
    });

    lIa.setText(" ");

    jLabel5.setText("Ia:");

    javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
    jPanel8.setLayout(jPanel8Layout);
    jPanel8Layout.setHorizontalGroup(
      jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel8Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(sAmbColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
              .addComponent(jLabel6)
              .addGap(3, 3, 3)
              .addComponent(tfAmbColorRed0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel7)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfAmbColorGreen0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel8)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfAmbColorBlue0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel19)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfAmbColorAlpha0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(bLight0AmbColor)))
          .addGroup(jPanel8Layout.createSequentialGroup()
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lIa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    jPanel8Layout.setVerticalGroup(
      jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel8Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfAmbColorRed0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfAmbColorGreen0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfAmbColorBlue0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel6)
          .addComponent(jLabel7)
          .addComponent(jLabel8)
          .addComponent(bLight0AmbColor)
          .addComponent(tfAmbColorAlpha0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel19))
        .addGap(18, 18, 18)
        .addComponent(sAmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(lIa))
        .addContainerGap())
    );

    jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Diffuse Color"));

    jLabel12.setText("G:");

    bLight0DiffuseColor.setText("Apply");
    bLight0DiffuseColor.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bLight0DiffuseColorActionPerformed(evt);
      }
    });

    jLabel14.setText("R:");

    jLabel13.setText("B:");

    tfDifuseColorGreen0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfDifuseColorGreen0ActionPerformed(evt);
      }
    });

    tfDifuseColorBlue0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfDifuseColorBlue0ActionPerformed(evt);
      }
    });

    tfDifuseColorRed0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfDifuseColorRed0ActionPerformed(evt);
      }
    });

    tfDiffColorAlpha0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfDiffColorAlpha0ActionPerformed(evt);
      }
    });

    jLabel20.setText("A:");

    sDiffuseColor.setMaximum(1000);
    sDiffuseColor.setPaintLabels(true);
    sDiffuseColor.setPaintTicks(true);
    sDiffuseColor.setValue(0);
    sDiffuseColor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sDiffuseColorMouseDragged(evt);
      }
    });

    jLabel4.setText("Id:");

    lId.setText(" ");

    javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
    jPanel11.setLayout(jPanel11Layout);
    jPanel11Layout.setHorizontalGroup(
      jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel11Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
            .addComponent(sDiffuseColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel11Layout.createSequentialGroup()
              .addComponent(jLabel14)
              .addGap(3, 3, 3)
              .addComponent(tfDifuseColorRed0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel12)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfDifuseColorGreen0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel13)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfDifuseColorBlue0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel20)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfDiffColorAlpha0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(bLight0DiffuseColor)))
          .addGroup(jPanel11Layout.createSequentialGroup()
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    jPanel11Layout.setVerticalGroup(
      jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfDifuseColorRed0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfDifuseColorGreen0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfDifuseColorBlue0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel14)
          .addComponent(jLabel12)
          .addComponent(jLabel13)
          .addComponent(bLight0DiffuseColor)
          .addComponent(tfDiffColorAlpha0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel20))
        .addGap(18, 18, 18)
        .addComponent(sDiffuseColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel4)
          .addComponent(lId))
        .addContainerGap(19, Short.MAX_VALUE))
    );

    jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Specular Color"));

    jLabel21.setText("A:");

    tfSpecularAlpha0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfSpecularAlpha0ActionPerformed(evt);
      }
    });

    tfSpecularColorRed0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfSpecularColorRed0ActionPerformed(evt);
      }
    });

    jLabel17.setText("B:");

    jLabel16.setText("G:");

    jLabel15.setText("R:");

    bLight0SpecularColor.setText("Apply");
    bLight0SpecularColor.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bLight0SpecularColorActionPerformed(evt);
      }
    });

    tfSpecularColorBlue0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfSpecularColorBlue0ActionPerformed(evt);
      }
    });

    tfSpecularColorGreen0.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        tfSpecularColorGreen0ActionPerformed(evt);
      }
    });

    sSpecularColor.setMaximum(1000);
    sSpecularColor.setPaintLabels(true);
    sSpecularColor.setPaintTicks(true);
    sSpecularColor.setValue(0);
    sSpecularColor.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        sSpecularColorMouseClicked(evt);
      }
    });
    sSpecularColor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sSpecularColorMouseDragged(evt);
      }
    });

    jLabel3.setText("Is:");

    lIs.setText(" ");

    javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
    jPanel12.setLayout(jPanel12Layout);
    jPanel12Layout.setHorizontalGroup(
      jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel12Layout.createSequentialGroup()
        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(sSpecularColor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
              .addContainerGap()
              .addComponent(jLabel15)
              .addGap(3, 3, 3)
              .addComponent(tfSpecularColorRed0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel16)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfSpecularColorGreen0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
              .addComponent(jLabel17)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfSpecularColorBlue0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(jLabel21)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(tfSpecularAlpha0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(bLight0SpecularColor)))
          .addGroup(jPanel12Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel3)
            .addGap(27, 27, 27)
            .addComponent(lIs, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap())
    );
    jPanel12Layout.setVerticalGroup(
      jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel12Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfSpecularColorRed0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfSpecularColorGreen0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfSpecularColorBlue0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel15)
          .addComponent(jLabel16)
          .addComponent(jLabel17)
          .addComponent(bLight0SpecularColor)
          .addComponent(tfSpecularAlpha0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel21))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(sSpecularColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(lIs))
        .addContainerGap(23, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1)
          .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(6, 6, 6)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPosX0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPosY0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPosZ0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(12, 12, 12)
            .addComponent(jLabel18)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfPosA0, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(bLight0Position)))
        .addContainerGap(261, Short.MAX_VALUE))
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jLabel2)
        .addGap(10, 10, 10)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tfPosX0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfPosY0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tfPosZ0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel9)
          .addComponent(jLabel10)
          .addComponent(jLabel11)
          .addComponent(bLight0Position)
          .addComponent(tfPosA0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel18))
        .addGap(24, 24, 24)
        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel5Layout.setVerticalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(88, Short.MAX_VALUE))
    );

    jTabbedPane4.addTab("Lights Manager", jPanel5);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Material Properties"));

    jLabel26.setText("Ka:");

    jLabel27.setText("Kd:");

    sKa.setValue(0);
    sKa.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sKaMouseDragged(evt);
      }
    });

    sKd.setValue(0);

    sKs.setValue(0);

    jLabel28.setText("Ks:");

    sNs.setMaximum(8);
    sNs.setMinorTickSpacing(1);
    sNs.setValue(0);

    jLabel30.setText("Ns:");

    jLabel31.setText("Ka: ");

    lKa.setText(" ");

    jLabel33.setText("Kd: ");

    lKd.setText(" ");

    jLabel35.setText("Ks: ");

    lKs.setText(" ");

    jLabel37.setText("Ns: ");

    lNs.setText(" ");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel26)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sKa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel27)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sKd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(jLabel29)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel28)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sKs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel30)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(sNs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        .addGap(37, 37, 37)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel31)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lKa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel33)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lKd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel35)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lKs, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel37)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lNs, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel26)
          .addComponent(sKa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel31)
            .addComponent(lKa)))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel27)
          .addComponent(sKd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel33)
            .addComponent(lKd)))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel28)
          .addComponent(sKs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel35)
            .addComponent(lKs)))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel30)
          .addComponent(sNs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel37)
            .addComponent(lNs)))
        .addGap(18, 18, 18)
        .addComponent(jLabel29))
    );

    javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
    jPanel13.setLayout(jPanel13Layout);
    jPanel13Layout.setHorizontalGroup(
      jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel13Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );
    jPanel13Layout.setVerticalGroup(
      jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel13Layout.createSequentialGroup()
        .addGap(44, 44, 44)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGap(635, 635, 635))
    );

    jTabbedPane4.addTab("Material", jPanel13);

    jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Wind Vector"));

    sWindVectorY.setMinorTickSpacing(1);
    sWindVectorY.setValue(0);
    sWindVectorY.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sWindVectorYMouseDragged(evt);
      }
    });

    sWindVectorX.setMinorTickSpacing(1);
    sWindVectorX.setValue(0);
    sWindVectorX.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sWindVectorXMouseDragged(evt);
      }
    });

    sWindVectorZ.setMinorTickSpacing(1);
    sWindVectorZ.setValue(0);
    sWindVectorZ.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sWindVectorZMouseDragged(evt);
      }
    });

    jLabel46.setText("Y");

    jLabel63.setText("X");

    jLabel64.setText("Z");

    lWindVecX.setText("              ");

    lWindVecY.setText("              ");

    lWindVecZ.setText("              ");

    jLabel65.setText("ATT:");

    lWindAtt.setText("              ");

    sWindAtt.setMinorTickSpacing(1);
    sWindAtt.setValue(0);
    sWindAtt.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        sWindAttMouseDragged(evt);
      }
    });

    javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
    jPanel15.setLayout(jPanel15Layout);
    jPanel15Layout.setHorizontalGroup(
      jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel15Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel15Layout.createSequentialGroup()
            .addComponent(sWindVectorX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lWindVecX))
          .addGroup(jPanel15Layout.createSequentialGroup()
            .addComponent(sWindVectorZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lWindVecZ))
          .addGroup(jPanel15Layout.createSequentialGroup()
            .addComponent(sWindVectorY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lWindVecY))
          .addGroup(jPanel15Layout.createSequentialGroup()
            .addComponent(sWindAtt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lWindAtt)))
        .addContainerGap(15, Short.MAX_VALUE))
    );
    jPanel15Layout.setVerticalGroup(
      jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(sWindVectorX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel63)
            .addComponent(lWindVecX)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(sWindVectorY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel46)
            .addComponent(lWindVecY)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(sWindVectorZ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
            .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel64)
              .addComponent(lWindVecZ))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
        .addGap(18, 18, 18)
        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(sWindAtt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lWindAtt)))
        .addContainerGap())
    );

    javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
    jPanel14.setLayout(jPanel14Layout);
    jPanel14Layout.setHorizontalGroup(
      jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel14Layout.createSequentialGroup()
        .addGap(24, 24, 24)
        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(236, Short.MAX_VALUE))
    );
    jPanel14Layout.setVerticalGroup(
      jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel14Layout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(543, Short.MAX_VALUE))
    );

    jTabbedPane4.addTab("Wind Manager", jPanel14);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jTabbedPane4)
          .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void tfSpeedCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSpeedCameraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSpeedCameraActionPerformed

    private void bSpeedCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSpeedCameraActionPerformed
        String speed = tfSpeedCamera.getText();
        if ( speed.isEmpty() ) return;
        App.SPEED = Float.parseFloat(speed);
    }//GEN-LAST:event_bSpeedCameraActionPerformed

    private void tfDiffColorAlpha0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDiffColorAlpha0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDiffColorAlpha0ActionPerformed

    private void tfSpecularAlpha0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSpecularAlpha0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSpecularAlpha0ActionPerformed

    private void tfAmbColorGreen0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmbColorGreen0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAmbColorGreen0ActionPerformed

    private void tfAmbColorRed0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmbColorRed0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAmbColorRed0ActionPerformed

    private void tfAmbColorBlue0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmbColorBlue0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAmbColorBlue0ActionPerformed

    private void tfPosX0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPosX0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPosX0ActionPerformed

    private void tfPosY0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPosY0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPosY0ActionPerformed

    private void tfPosZ0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPosZ0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPosZ0ActionPerformed

    private void tfDifuseColorGreen0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDifuseColorGreen0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDifuseColorGreen0ActionPerformed

    private void tfDifuseColorBlue0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDifuseColorBlue0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDifuseColorBlue0ActionPerformed

    private void tfDifuseColorRed0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDifuseColorRed0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDifuseColorRed0ActionPerformed

    private void tfPosA0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPosA0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPosA0ActionPerformed

    private void tfAmbColorAlpha0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmbColorAlpha0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAmbColorAlpha0ActionPerformed

    private void bLight0AmbColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLight0AmbColorActionPerformed
        String r = this.tfAmbColorRed0.getText();
        String g = this.tfAmbColorGreen0.getText();
        String b = this.tfAmbColorBlue0.getText();
        String a = this.tfAmbColorAlpha0.getText();

        if ( r.isEmpty() || g.isEmpty() || b.isEmpty() || a.isEmpty() ) return;
        float [] rgbaVec = new float[] {Float.parseFloat(r),Float.parseFloat(g), Float.parseFloat(b), Float.parseFloat(a)};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setAmbientColor(rgbaVec);
    }//GEN-LAST:event_bLight0AmbColorActionPerformed

    private void bLight0PositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLight0PositionActionPerformed
        String x = this.tfPosX0.getText();
        String y = this.tfPosY0.getText();
        String z = this.tfPosZ0.getText();
        String a = this.tfPosA0.getText();

        if ( x.isEmpty() || y.isEmpty() || z.isEmpty() || a.isEmpty() ) return;
        float [] position = new float[] {Float.parseFloat(x),Float.parseFloat(y), Float.parseFloat(z), Float.parseFloat(a)};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setPosition(position);
    }//GEN-LAST:event_bLight0PositionActionPerformed

    private void bLight0SpecularColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLight0SpecularColorActionPerformed
        String r = this.tfSpecularColorRed0.getText();
        String g = this.tfSpecularColorGreen0.getText();
        String b = this.tfSpecularColorBlue0.getText();
        String a = this.tfSpecularAlpha0.getText();

        if ( r.isEmpty() || g.isEmpty() || b.isEmpty() || a.isEmpty() ) return;
        float [] rgbaVec = new float[] {Float.parseFloat(r),Float.parseFloat(g), Float.parseFloat(b), Float.parseFloat(a)};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setSpecularColor(rgbaVec);
    }//GEN-LAST:event_bLight0SpecularColorActionPerformed

    private void bLight0DiffuseColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLight0DiffuseColorActionPerformed
        String r = this.tfDifuseColorRed0.getText();
        String g = this.tfDifuseColorGreen0.getText();
        String b = this.tfDifuseColorBlue0.getText();
        String a = this.tfDiffColorAlpha0.getText();

        if ( r.isEmpty() || g.isEmpty() || b.isEmpty() || a.isEmpty() ) return;
        float [] rgbaVec = new float[] {Float.parseFloat(r),Float.parseFloat(g), Float.parseFloat(b), Float.parseFloat(a)};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setDiffuseColor(rgbaVec);
    }//GEN-LAST:event_bLight0DiffuseColorActionPerformed

    private void tfSpecularColorGreen0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSpecularColorGreen0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSpecularColorGreen0ActionPerformed

    private void tfSpecularColorBlue0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSpecularColorBlue0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSpecularColorBlue0ActionPerformed

    private void tfSpecularColorRed0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfSpecularColorRed0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfSpecularColorRed0ActionPerformed

    private void comboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCategoryActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        int pos = cb.getSelectedIndex();
        this.comboBoxModel.setEnabled(true);
        System.out.println(" >> Selecionou "+  cb.getSelectedItem().toString() +" , pos = "+pos);
        if(this.objectList.isEmpty() || this.objectList.size() <= pos) return;
        Manageable cat = this.objectList.get(pos);
        if(cat instanceof ManageableObject){
            ManageableObject mo = (ManageableObject)cat;
            this.comboBoxModel.removeAllItems();
            this.comboBoxModel.addItem(mo.getModelName());
            
        }
        if(cat instanceof ManageableCollection){
            ManageableCollection mc = (ManageableCollection)cat;
            this.comboBoxModel.removeAllItems();
            ArrayList<String> mNames = mc.getNamesOfModels();
            for (String mName : mNames) {
                this.comboBoxModel.addItem(mName);
            }
        }
    }//GEN-LAST:event_comboBoxCategoryActionPerformed

    private void comboBoxModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxModelActionPerformed
        this.comboBoxEntity.setEnabled(true);
        this.comboBoxEntity.removeAllItems();
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            ManageableObject mo = (ManageableObject)cat;
            ArrayList<String> eNames = mo.getNamesOfEntities();
            for (String eName : eNames) {
                this.comboBoxEntity.addItem(eName);
            }
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            ArrayList<String> eNames = mc.getNamesOfEntities(this.comboBoxModel.getSelectedIndex());
            for (String eName : eNames) {
                this.comboBoxEntity.addItem(eName);
            }
        }
    }//GEN-LAST:event_comboBoxModelActionPerformed

    private void comboBoxCategoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboBoxCategoryMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCategoryMouseEntered

    private void sKaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sKaMouseDragged
        // 1- Check whether there is a selected item in the comboBoxElem, if yes,
        // call a method from a correspondent object container from objectList
//        if ( this.comboBoxModel.isEnabled() ){
//            // 2- Update this elem appropriately 
//            int containerPos = this.comboBoxCategory.getSelectedIndex();
//            int itemPos = this.comboBoxModel.getSelectedIndex();
//            JWavefrontModel element = this.objectList.get(containerPos).getElement(itemPos);
//            // TO DO aterar o sKa do MATERIAL correspondente!!
//        }
    }//GEN-LAST:event_sKaMouseDragged

    private void comboBoxEntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEntityActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        int pos = cb.getSelectedIndex();
        this.comboBoxModel.setEnabled(true);
//        System.out.println(" >> Selecionou "+  cb.getSelectedItem().toString() +" , pos = "+pos);
        if(this.objectList.isEmpty()) return;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject){
          ManageableObject mo = (ManageableObject)cat;
          // Update slide values
//            this.sTx.setValue(mo.getTx(pos));
          updateSlidersFromModelParameters(mo, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection){
          ManageableCollection mc = (ManageableCollection)cat;
          if(this.comboBoxEntity.getSelectedIndex() < 0) return;
          updateSlidersFromModelParameters(mc.getModel(this.comboBoxModel.getSelectedIndex()), 
                                        this.comboBoxEntity.getSelectedIndex());
            
//            this.comboBoxModel.removeAllItems();
//            ArrayList<String> mNames = mc.getNamesOfModels();
//            for (String mName : mNames) {
//                this.comboBoxModel.addItem(mName);
//            }
        }
    }//GEN-LAST:event_comboBoxEntityActionPerformed

    private void sSzMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSzMouseDragged
      float factor = Float.valueOf(this.tfFactor.getText());
      ManageableObject mo;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            mo = (ManageableObject)cat;
            mo.setSz((this.sSz.getValue()/ ATT_FACTOR) * factor, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            //TODO
            mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
            if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
            mo.setSz((this.sSz.getValue()/ ATT_FACTOR) * factor, this.comboBoxEntity.getSelectedIndex());
        }
    }//GEN-LAST:event_sSzMouseDragged

    private void sSyMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSyMouseDragged
        //        int containerPos = this.comboBoxCategory.getSelectedIndex();
        float factor = Float.valueOf(this.tfFactor.getText());
        ManageableObject mo;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            mo = (ManageableObject)cat;
            mo.setSy((this.sSy.getValue()/ ATT_FACTOR) * factor, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            //TODO
            mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
            if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
            mo.setSy((this.sSy.getValue()/ ATT_FACTOR) * factor, this.comboBoxEntity.getSelectedIndex());
        }
    }//GEN-LAST:event_sSyMouseDragged

    private void sSxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSxMouseDragged
        float factor = Float.valueOf(this.tfFactor.getText());
        ManageableObject mo;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            mo = (ManageableObject)cat;
            mo.setSx((this.sSx.getValue()/ ATT_FACTOR) * factor, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            //TODO
            mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
            if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
            mo.setSx((this.sSx.getValue()/ ATT_FACTOR) * factor, this.comboBoxEntity.getSelectedIndex());
        }
    }//GEN-LAST:event_sSxMouseDragged

    private void sTzMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sTzMouseDragged
        // 1- Check whether there is a selected item in the comboBoxElem, i.e.,
        // the selected item in the comboBoxObj is a container one.
        float factor = Float.valueOf(this.tfFactor.getText());
        ManageableObject mo;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            mo = (ManageableObject)cat;
            mo.setTz((this.sTz.getValue()/ ATT_FACTOR), this.comboBoxEntity.getSelectedIndex());
            updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            //TODO
            mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
            if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
            mo.setTz((this.sTz.getValue()/ ATT_FACTOR), this.comboBoxEntity.getSelectedIndex());
            updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
        }
    }//GEN-LAST:event_sTzMouseDragged

    private void sTyMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sTyMouseDragged
        // 1- Check whether there is a selected item in the comboBoxElem, i.e.,
        // the selected item in the comboBoxObj is a container one.
       float factor = Float.valueOf(this.tfFactor.getText());
        ManageableObject mo;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            mo = (ManageableObject)cat;
            mo.setTy((this.sTy.getValue()/ ATT_FACTOR), this.comboBoxEntity.getSelectedIndex());
            updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            //TODO
            mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
            if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
            mo.setTy((this.sTy.getValue()/ ATT_FACTOR), this.comboBoxEntity.getSelectedIndex());
            updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
        }
    }//GEN-LAST:event_sTyMouseDragged

    private void sTxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sTxMouseDragged
        // 1- Check whether there is a selected item in the comboBoxElem, i.e.,
        // the selected item in the comboBoxObj is a container one.
       float factor = Float.valueOf(this.tfFactor.getText());
        ManageableObject mo;
        Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
        if(cat instanceof ManageableObject) {
            mo = (ManageableObject)cat;
            mo.setTx((this.sTx.getValue()/ ATT_FACTOR), this.comboBoxEntity.getSelectedIndex());
            updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
        }
        if(cat instanceof ManageableCollection) {
            ManageableCollection mc = (ManageableCollection)cat;
            //TODO
            mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
            if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
            mo.setTx((this.sTx.getValue()/ ATT_FACTOR), this.comboBoxEntity.getSelectedIndex());
            updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
        }
    }//GEN-LAST:event_sTxMouseDragged

    private void sSpecularColorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSpecularColorMouseDragged
        float value = (float)this.sSpecularColor.getValue()/1000f;
        float [] rgbaVec = new float[] {value, value, value};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setSpecularColor(rgbaVec);
        this.lIs.setText(String.valueOf(value));
    }//GEN-LAST:event_sSpecularColorMouseDragged

    private void sAmbColorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sAmbColorMouseDragged
        float value = (float)this.sAmbColor.getValue()/1000;
        float [] rgbaVec = new float[] {value, value, value};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setAmbientColor(rgbaVec);
        this.lIa.setText(String.valueOf(value));
    }//GEN-LAST:event_sAmbColorMouseDragged

    private void sDiffuseColorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sDiffuseColorMouseDragged
        float value = (float)this.sDiffuseColor.getValue()/500;
        float [] rgbaVec = new float[] {value, value, value};
        this.pipeline.getLight(Pipeline.LightNumber.LIGHT0).setDiffuseColor(rgbaVec);
        this.lId.setText(String.valueOf(value));
    }//GEN-LAST:event_sDiffuseColorMouseDragged

  private void tfRotationSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRotationSpeedActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_tfRotationSpeedActionPerformed

  private void bRotationSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRotationSpeedActionPerformed
    String value = this.tfRotationSpeed.getText();
    if (value != null && !value.isEmpty()) App.SPEED_ROT = Float.valueOf(value);
  }//GEN-LAST:event_bRotationSpeedActionPerformed

  private void sSpecularColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sSpecularColorMouseClicked
    // TODO add your handling code here:
  }//GEN-LAST:event_sSpecularColorMouseClicked

  private void bDrawBoundBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDrawBoundBoxActionPerformed
    ManageableObject mo;
    Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
    if(cat instanceof ManageableObject) {
        mo = (ManageableObject)cat;
        if(mo instanceof JWavefrontModel){
          JWavefrontModel jw = (JWavefrontModel)mo;
          jw.enableEntityBoundBox(this.comboBoxEntity.getSelectedIndex()); 
        }
    }
    if(cat instanceof ManageableCollection) {
        ManageableCollection mc = (ManageableCollection)cat;
        //TODO
        mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
        if(mo instanceof JWavefrontModel){
          JWavefrontModel jw = (JWavefrontModel) mo;
          jw.enableEntityBoundBox(this.comboBoxEntity.getSelectedIndex());
        }
    }
  }//GEN-LAST:event_bDrawBoundBoxActionPerformed

  private void sWindVectorXMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sWindVectorXMouseDragged
    float x = (float) this.sWindVectorX.getValue() / WIND_ATT;
    float y = (float) this.sWindVectorY.getValue() / WIND_ATT;
    float z = (float) this.sWindVectorZ.getValue() / WIND_ATT;
    updateWindLabels();
    this.pipeline.setWindVector(new float[]{x, y, z});
  }//GEN-LAST:event_sWindVectorXMouseDragged

  private void sWindVectorYMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sWindVectorYMouseDragged
    float x = (float) this.sWindVectorX.getValue() / WIND_ATT;
    float y = (float) this.sWindVectorY.getValue() / WIND_ATT;
    float z = (float) this.sWindVectorZ.getValue() / WIND_ATT;
    updateWindLabels();
    this.pipeline.setWindVector(new float[]{x, y, z});
  }//GEN-LAST:event_sWindVectorYMouseDragged

  private void sWindVectorZMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sWindVectorZMouseDragged
    float x = (float) this.sWindVectorX.getValue() / WIND_ATT;
    float y = (float) this.sWindVectorY.getValue() / WIND_ATT;
    float z = (float) this.sWindVectorZ.getValue() / WIND_ATT;
    updateWindLabels();
    this.pipeline.setWindVector(new float[]{x, y, z});
  }//GEN-LAST:event_sWindVectorZMouseDragged

  private void sWindAttMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sWindAttMouseDragged
    this.WIND_ATT = this.sWindAtt.getValue();
    this.lWindAtt.setText(String.valueOf(this.WIND_ATT));
  }//GEN-LAST:event_sWindAttMouseDragged

  private void sRxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sRxMouseDragged
    ManageableObject mo;
    Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
    if(cat instanceof ManageableObject) {
        mo = (ManageableObject)cat;
        mo.setRx((this.sRx.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
    if(cat instanceof ManageableCollection) {
        ManageableCollection mc = (ManageableCollection)cat;
        //TODO
        mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
        if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
        mo.setRx((this.sRx.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
  }//GEN-LAST:event_sRxMouseDragged

  private void sRyMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sRyMouseDragged
    ManageableObject mo;
    Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
    if(cat instanceof ManageableObject) {
        mo = (ManageableObject)cat;
        mo.setRy((this.sRy.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
    if(cat instanceof ManageableCollection) {
        ManageableCollection mc = (ManageableCollection)cat;
        //TODO
        mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
        if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
        mo.setRy((this.sRy.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
  }//GEN-LAST:event_sRyMouseDragged

  private void sRzMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sRzMouseDragged
    ManageableObject mo;
    Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
    if(cat instanceof ManageableObject) {
        mo = (ManageableObject)cat;
        mo.setRz((this.sRz.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
    if(cat instanceof ManageableCollection) {
        ManageableCollection mc = (ManageableCollection)cat;
        //TODO
        mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
        if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
        mo.setRz((this.sRz.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
  }//GEN-LAST:event_sRzMouseDragged

  private void sObjRotThetaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sObjRotThetaMouseDragged
    ManageableObject mo;
    Manageable cat = this.objectList.get(this.comboBoxCategory.getSelectedIndex());
    if(cat instanceof ManageableObject) {
        mo = (ManageableObject)cat;
        mo.setTheta((this.sObjRotTheta.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
    if(cat instanceof ManageableCollection) {
        ManageableCollection mc = (ManageableCollection)cat;
        //TODO
        mo = mc.getModel(this.comboBoxModel.getSelectedIndex());
        if(DEBUG) System.out.println(" >>> Tentando mover: "+mo.getModelName());
        mo.setTheta((this.sObjRotTheta.getValue()), this.comboBoxEntity.getSelectedIndex());
        updateLabelsInfo(mo, this.comboBoxEntity.getSelectedIndex());
    }
  }//GEN-LAST:event_sObjRotThetaMouseDragged
    
    public void updateCamAngle(double camAngle){
        lcamAngle.setText(Double.toString(camAngle) );
    }
    
    
    /***************************************************************************
    *   Code related to the Sliders 
    */

    public float getCorrectPropertyValue(int value, int div) {
        return (float) value/div;
    }
    
    @Override
    public void stateChanged(ChangeEvent e) {
        this.lKa.setText(Float.toString(this.getCorrectPropertyValue(this.sKa.getValue(), 100)));
        this.lKd.setText(Float.toString(this.getCorrectPropertyValue(this.sKd.getValue(), 100)));
        this.lKs.setText(Float.toString(this.getCorrectPropertyValue(this.sKs.getValue(), 100)));
        this.lNs.setText(Integer.toString(2 << this.sNs.getValue()));
        
        this.lTx.setText(Float.toString(this.getCorrectPropertyValue(this.sTx.getValue(), 100)));
        this.lTy.setText(Float.toString(this.getCorrectPropertyValue(this.sTy.getValue(), 100)));
        this.lTz.setText(Float.toString(this.getCorrectPropertyValue(this.sTz.getValue(), 100)));
        
        this.lSx.setText(Float.toString(this.getCorrectPropertyValue(this.sSx.getValue(),10)));
        this.lSy.setText(Float.toString(this.getCorrectPropertyValue(this.sSy.getValue(),10)));
        this.lSz.setText(Float.toString(this.getCorrectPropertyValue(this.sSz.getValue(),10)));
        
        this.lRx.setText(Float.toString(this.getCorrectPropertyValue(this.sRx.getValue(),10)));
        this.lRy.setText(Float.toString(this.getCorrectPropertyValue(this.sRy.getValue(),10)));
        this.lRz.setText(Float.toString(this.getCorrectPropertyValue(this.sRz.getValue(),10)));
        this.lObjRotAngle.setText(Integer.toString(this.sObjRotTheta.getValue()));
    }
    
    public void addObject(ManageableObject obj) {
        System.out.println(">> Adicionando "+obj.getModelName()+" em objectList.");
        this.comboBoxCategory.addItem(obj.getModelName());
        this.objectList.add(obj);       
    }
    
    public void addObject(ManageableCollection obj) {
        System.out.println(">> Adicionando "+obj.getCollectionName()+" em objectList.");
        this.comboBoxCategory.addItem(obj.getCollectionName());
        this.objectList.add(obj);       
    }
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameManager().setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton bDrawBoundBox;
  private javax.swing.JButton bLight0AmbColor;
  private javax.swing.JButton bLight0DiffuseColor;
  private javax.swing.JButton bLight0Position;
  private javax.swing.JButton bLight0SpecularColor;
  private javax.swing.JButton bRotationSpeed;
  private javax.swing.JButton bSpeedCamera;
  private javax.swing.JComboBox comboBoxCategory;
  private javax.swing.JComboBox comboBoxEntity;
  private javax.swing.JComboBox comboBoxModel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel16;
  private javax.swing.JLabel jLabel17;
  private javax.swing.JLabel jLabel18;
  private javax.swing.JLabel jLabel19;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel20;
  private javax.swing.JLabel jLabel21;
  private javax.swing.JLabel jLabel22;
  private javax.swing.JLabel jLabel23;
  private javax.swing.JLabel jLabel24;
  private javax.swing.JLabel jLabel25;
  private javax.swing.JLabel jLabel26;
  private javax.swing.JLabel jLabel27;
  private javax.swing.JLabel jLabel28;
  private javax.swing.JLabel jLabel29;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel30;
  private javax.swing.JLabel jLabel31;
  private javax.swing.JLabel jLabel32;
  private javax.swing.JLabel jLabel33;
  private javax.swing.JLabel jLabel34;
  private javax.swing.JLabel jLabel35;
  private javax.swing.JLabel jLabel36;
  private javax.swing.JLabel jLabel37;
  private javax.swing.JLabel jLabel38;
  private javax.swing.JLabel jLabel39;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel40;
  private javax.swing.JLabel jLabel41;
  private javax.swing.JLabel jLabel42;
  private javax.swing.JLabel jLabel43;
  private javax.swing.JLabel jLabel44;
  private javax.swing.JLabel jLabel46;
  private javax.swing.JLabel jLabel47;
  private javax.swing.JLabel jLabel48;
  private javax.swing.JLabel jLabel49;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel50;
  private javax.swing.JLabel jLabel51;
  private javax.swing.JLabel jLabel52;
  private javax.swing.JLabel jLabel53;
  private javax.swing.JLabel jLabel54;
  private javax.swing.JLabel jLabel55;
  private javax.swing.JLabel jLabel56;
  private javax.swing.JLabel jLabel57;
  private javax.swing.JLabel jLabel58;
  private javax.swing.JLabel jLabel59;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel60;
  private javax.swing.JLabel jLabel61;
  private javax.swing.JLabel jLabel62;
  private javax.swing.JLabel jLabel63;
  private javax.swing.JLabel jLabel64;
  private javax.swing.JLabel jLabel65;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel10;
  private javax.swing.JPanel jPanel11;
  private javax.swing.JPanel jPanel12;
  private javax.swing.JPanel jPanel13;
  private javax.swing.JPanel jPanel14;
  private javax.swing.JPanel jPanel15;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JPanel jPanel6;
  private javax.swing.JPanel jPanel7;
  private javax.swing.JPanel jPanel8;
  private javax.swing.JPanel jPanel9;
  private javax.swing.JTabbedPane jTabbedPane4;
  private javax.swing.JLabel lIa;
  private javax.swing.JLabel lId;
  private javax.swing.JLabel lIs;
  private javax.swing.JLabel lKa;
  private javax.swing.JLabel lKd;
  private javax.swing.JLabel lKs;
  private javax.swing.JLabel lNs;
  private javax.swing.JLabel lObjRotAngle;
  private javax.swing.JLabel lRx;
  private javax.swing.JLabel lRy;
  private javax.swing.JLabel lRz;
  private javax.swing.JLabel lSx;
  private javax.swing.JLabel lSy;
  private javax.swing.JLabel lSz;
  private javax.swing.JLabel lTx;
  private javax.swing.JLabel lTy;
  private javax.swing.JLabel lTz;
  private javax.swing.JLabel lWindAtt;
  private javax.swing.JLabel lWindVecX;
  private javax.swing.JLabel lWindVecY;
  private javax.swing.JLabel lWindVecZ;
  private javax.swing.JLabel labelPlayerX;
  private javax.swing.JLabel labelPlayerY;
  private javax.swing.JLabel labelPlayerZ;
  private javax.swing.JLabel labelTx;
  private javax.swing.JLabel labelTy;
  private javax.swing.JLabel labelTz;
  private javax.swing.JLabel lcamAngle;
  private javax.swing.JSlider sAmbColor;
  private javax.swing.JSlider sDiffuseColor;
  private javax.swing.JSlider sKa;
  private javax.swing.JSlider sKd;
  private javax.swing.JSlider sKs;
  private javax.swing.JSlider sNs;
  private javax.swing.JSlider sObjRotTheta;
  private javax.swing.JSlider sRx;
  private javax.swing.JSlider sRy;
  private javax.swing.JSlider sRz;
  private javax.swing.JSlider sSpecularColor;
  private javax.swing.JSlider sSx;
  private javax.swing.JSlider sSy;
  private javax.swing.JSlider sSz;
  private javax.swing.JSlider sTx;
  private javax.swing.JSlider sTy;
  private javax.swing.JSlider sTz;
  private javax.swing.JSlider sWindAtt;
  private javax.swing.JSlider sWindVectorX;
  private javax.swing.JSlider sWindVectorY;
  private javax.swing.JSlider sWindVectorZ;
  private javax.swing.JTextField tfAmbColorAlpha0;
  private javax.swing.JTextField tfAmbColorBlue0;
  private javax.swing.JTextField tfAmbColorGreen0;
  private javax.swing.JTextField tfAmbColorRed0;
  private javax.swing.JTextField tfDiffColorAlpha0;
  private javax.swing.JTextField tfDifuseColorBlue0;
  private javax.swing.JTextField tfDifuseColorGreen0;
  private javax.swing.JTextField tfDifuseColorRed0;
  private javax.swing.JTextField tfFactor;
  private javax.swing.JTextField tfPosA0;
  private javax.swing.JTextField tfPosX0;
  private javax.swing.JTextField tfPosY0;
  private javax.swing.JTextField tfPosZ0;
  private javax.swing.JTextField tfRotationSpeed;
  private javax.swing.JTextField tfSpecularAlpha0;
  private javax.swing.JTextField tfSpecularColorBlue0;
  private javax.swing.JTextField tfSpecularColorGreen0;
  private javax.swing.JTextField tfSpecularColorRed0;
  private javax.swing.JTextField tfSpeedCamera;
  // End of variables declaration//GEN-END:variables

  private void updateLabelsInfo(ManageableObject mo, int ent) {
    if(ent < 0) { return; }
    this.labelTx.setText(String.valueOf(mo.getTx(ent)));
    this.labelTy.setText(String.valueOf(mo.getTy(ent)));
    this.labelTz.setText(String.valueOf(mo.getTz(ent)));
    this.lTx.setText(String.valueOf(mo.getTx(ent)));
    this.lTy.setText(String.valueOf(mo.getTy(ent)));
    this.lTz.setText(String.valueOf(mo.getTz(ent)));
    this.lSx.setText(String.valueOf(mo.getSx(ent)));
    this.lSy.setText(String.valueOf(mo.getSy(ent)));
    this.lSz.setText(String.valueOf(mo.getSz(ent)));
    
    this.lRx.setText(String.valueOf(mo.getRx(ent)));
    this.lRy.setText(String.valueOf(mo.getRy(ent)));
    this.lRz.setText(String.valueOf(mo.getRz(ent)));
    this.lObjRotAngle.setText(String.valueOf(mo.getTheta(ent)));
    
  }

  public void updatePlayerPosition(float x, float y, float z) {
    this.labelPlayerX.setText(String.valueOf(x));
    this.labelPlayerY.setText(String.valueOf(y));
    this.labelPlayerZ.setText(String.valueOf(z));
  }

  private void updateSlidersFromModelParameters(ManageableObject mo, int entity) {
    if(entity < 0) { return; }
    this.sTx.setValue(Math.round(mo.getTx(entity) * ATT_FACTOR));
    this.sTy.setValue(Math.round(mo.getTy(entity) * ATT_FACTOR));
    this.sTz.setValue(Math.round(mo.getTz(entity) * ATT_FACTOR));
    this.sSx.setValue(Math.round(mo.getSx(entity) * ATT_FACTOR));
    this.sSy.setValue(Math.round(mo.getSy(entity) * ATT_FACTOR));
    this.sSz.setValue(Math.round(mo.getSz(entity) * ATT_FACTOR));  
  }

  private void updateWindLabels() {
    this.lWindVecX.setText(String.valueOf((float) this.sWindVectorX.getValue() / WIND_ATT));
    this.lWindVecY.setText(String.valueOf((float) this.sWindVectorY.getValue() / WIND_ATT));
    this.lWindVecZ.setText(String.valueOf((float) this.sWindVectorZ.getValue() / WIND_ATT));
  }

  private void updateWindVectorLabelsAndSlidersFromWorld() {
    float wv[] = this.pipeline.getWindVector();
    this.lWindVecX.setText(String.valueOf( wv[0] ));
    this.lWindVecY.setText(String.valueOf( wv[1] ));
    this.lWindVecZ.setText(String.valueOf( wv[2] ));
    this.sWindVectorX.setValue(Math.round(wv[0] * WIND_ATT));
    this.sWindVectorY.setValue(Math.round(wv[1] * WIND_ATT));
    this.sWindVectorZ.setValue(Math.round(wv[2] * WIND_ATT));

  }
 

    
    
}
